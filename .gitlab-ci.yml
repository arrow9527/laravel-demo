image: docker:24.0.5
services:
  # 將源自映像的完整名稱設定簡短別名
  - name: registry.hub.docker.com/library/docker:24.0.5-dind
    alias: docker

stages:
  - build
  - test
  - deploy

save-env-job:
  stage: .pre
  script:
    - echo "This job runs in the .pre stage, before all other stages."
    - echo APP_NAME=$APP_NAME >> .env
    - echo APP_ENV=$APP_ENV >> .env
    - echo APP_KEY=$APP_KEY >> .env
    - echo APP_DEBUG=$APP_DEBUG >> .env
    - echo APP_TIMEZONE=UTC >> .env
    - echo APP_URL=$APP_URL >> .env
    - echo "" >> .env
    - echo APP_LOCALE=en >> .env
    - echo APP_FALLBACK_LOCALE=en >> .env
    - echo APP_FAKER_LOCALE=en_US >> .env
    - echo "" >> .env
    - echo APP_MAINTENANCE_DRIVER=file >> .env
    - echo APP_MAINTENANCE_STORE=database >> .env
    - echo "" >> .env
    - echo BCRYPT_ROUNDS=12 >> .env
    - echo "" >> .env
    - echo LOG_CHANNEL=stack >> .env
    - echo LOG_STACK=single >> .env
    - echo LOG_DEPRECATIONS_CHANNEL=null >> .env
    - echo LOG_LEVEL=debug >> .env
    - echo "" >> .env
    - echo DB_CONNECTION=sqlite >> .env
    - echo "" >> .env
    - echo SESSION_DRIVER=database >> .env
    - echo SESSION_LIFETIME=120 >> .env
    - echo SESSION_ENCRYPT=false >> .env
    - echo SESSION_PATH=/ >> .env
    - echo SESSION_DOMAIN=null >> .env
    - echo "" >> .env
    - echo BROADCAST_CONNECTION=log >> .env
    - echo FILESYSTEM_DISK=local >> .env
    - echo QUEUE_CONNECTION=database >> .env
    - echo "" >> .env
    - echo CACHE_STORE=database >> .env
    - echo CACHE_PREFIX= >> .env
    - echo "" >> .env
    - echo MEMCACHED_HOST=127.0.0.1 >> .env
    - echo "" >> .env
    - echo REDIS_CLIENT=phpredis >> .env
    - echo REDIS_HOST=127.0.0.1 >> .env
    - echo REDIS_PASSWORD=null >> .env
    - echo REDIS_PORT=6379 >> .env
    - echo "" >> .env
    - echo MAIL_MAILER=log >> .env
    - echo MAIL_HOST=127.0.0.1 >> .env
    - echo MAIL_PORT=2525 >> .env
    - echo MAIL_USERNAME=null >> .env
    - echo MAIL_PASSWORD=null >> .env
    - echo MAIL_ENCRYPTION=null >> .env
    - echo MAIL_FROM_ADDRESS="hello@example.com" >> .env
    - echo MAIL_FROM_NAME=\"\${APP_NAME}\" >> .env
    - echo "" >> .env
    - echo AWS_ACCESS_KEY_ID= >> .env
    - echo AWS_SECRET_ACCESS_KEY= >> .env
    - echo AWS_DEFAULT_REGION=us-east-1 >> .env
    - echo AWS_BUCKET= >> .env
    - echo AWS_USE_PATH_STYLE_ENDPOINT=false >> .env
    - echo "" >> .env
    - echo VITE_APP_NAME=\"\${APP_NAME}\" >> .env
  artifacts:
    paths:
      - .env

build-job:
  stage: build
  script:
    - echo "Build"
    - docker build -t $CI_REGISTRY_IMAGE:latest .
    - docker save  $CI_REGISTRY_IMAGE > $CI_REGISTRY_IMAGE.tar
  artifacts:
    paths:
        - $CI_REGISTRY_IMAGE.tar

test-job:
  stage: test
  script:
    - echo "Tests..."
    - docker images
    - docker run --rm -v $(pwd):/app -w /app $CI_REGISTRY_IMAGE:latest ./vendor/bin/phpunit

deploy-job:
  stage: deploy
  before_script:
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SERVER_PRIVATE_KEY")
  script:
    - echo "Deploying application..."
    - scp -o StrictHostKeyChecking=no $CI_REGISTRY_IMAGE.tar $SERVER_USER@$SERVER_URL:workspace
    - ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_URL "
      docker load < workspace/$CI_REGISTRY_IMAGE.tar &&
      docker rm -f $APP_NAME || true &&
      docker images &&
      docker run -d --name $APP_NAME -p 80:8181 $CI_REGISTRY_IMAGE:latest
      "